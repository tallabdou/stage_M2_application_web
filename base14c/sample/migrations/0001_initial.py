# Generated by Django 3.2.3 on 2021-07-22 06:58

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('research', '0001_initial'),
        ('people', '0001_initial'),
        ('paper', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('GifA', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('sample_reference_blank', models.CharField(blank=True, max_length=50)),
                ('user_sample_description', models.CharField(blank=True, max_length=250)),
                ('receipt_date', models.DateField(blank=True, null=True, verbose_name='Receipt date (YYYY-MM-DD)')),
                ('expected_age', models.CharField(blank=True, max_length=50)),
                ('expected_F14C', models.CharField(blank=True, max_length=50)),
                ('further_information_concerning_sample', models.CharField(blank=True, max_length=50)),
                ('research_thematic', models.CharField(blank=True, choices=[('archeology', 'archeology'), ('continental', 'continental'), ('marine (paleoclimatology)', 'marine (paleoclimatology)'), ('heritage sciences', 'heritage sciences'), ('cycle-in-natura', 'cycle-in-natura'), ('cycle-ex-natura', 'cycle-ex-natura'), ('other', 'other'), ('standard', 'standard')], max_length=50)),
                ('link_between_GifAs', models.PositiveIntegerField(blank=True, null=True)),
                ('link_comment', models.CharField(blank=True, max_length=200)),
                ('ocean_sea', models.CharField(blank=True, max_length=250)),
                ('profile_core_name', models.CharField(blank=True, max_length=250, verbose_name='profile/core name')),
                ('sampling_core_depth_cm', models.PositiveIntegerField(blank=True, null=True)),
                ('cruise_name', models.CharField(blank=True, max_length=250)),
                ('vessel', models.CharField(blank=True, max_length=250)),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2, null=True)),
                ('state_province_departement', models.CharField(blank=True, max_length=250, verbose_name='state/province/département')),
                ('city', models.CharField(blank=True, max_length=250)),
                ('site_name', models.CharField(blank=True, max_length=250, verbose_name='site name / institution name')),
                ('longitude', models.FloatField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(180), django.core.validators.MinValueValidator(-180)], verbose_name='Longitude (-180°(W) to +180°(E))')),
                ('latitude', models.FloatField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(90), django.core.validators.MinValueValidator(-90)], verbose_name='Latitude (-90°(S) to +90°(N))')),
                ('altitude', models.IntegerField(blank=True, null=True, verbose_name='Altitude [m]')),
                ('depth', models.PositiveIntegerField(blank=True, null=True, verbose_name='Depth [m]')),
                ('short_geographical_description', models.CharField(blank=True, max_length=250, verbose_name='Short geographical description (inc. geological settlement)')),
                ('associated_documents', models.URLField(blank=True, max_length=250, null=True, verbose_name='Associated documents (inc. article, fieldwork report, project proposal, …')),
                ('further_information', models.CharField(blank=True, max_length=250, null=True)),
                ('fieldwork_cruise_date', models.DateField(blank=True, null=True, verbose_name='fieldwork/cruise_date (DD/MM/YYYY)')),
                ('collected_field_by', models.CharField(blank=True, max_length=250, verbose_name='Collected on field by')),
                ('experiment_type', models.CharField(blank=True, max_length=250, verbose_name='Experiment_type (incubation, greenhouse, …)')),
                ('experiment_leader', models.CharField(blank=True, max_length=250)),
                ('short_experiment_description', models.CharField(blank=True, max_length=250)),
                ('managing_organization', models.CharField(blank=True, max_length=250)),
                ('institution_name', models.CharField(blank=True, max_length=250)),
                ('further_information_2', models.CharField(blank=True, max_length=250)),
                ('sampling_depth', models.CharField(blank=True, max_length=250, verbose_name='Sampling depth (cm)')),
                ('object_ID', models.CharField(blank=True, max_length=250)),
                ('description', models.CharField(blank=True, max_length=250)),
                ('sample_type', models.CharField(blank=True, max_length=250, verbose_name="Sample's type")),
                ('sample_fraction_analysed', models.CharField(blank=True, max_length=250, verbose_name='Sample fraction to be analysed')),
                ('additional_information_material', models.CharField(blank=True, max_length=250, verbose_name='Additional information about material')),
                ('raw_sample_weight', models.FloatField(blank=True, null=True, verbose_name='raw_sample_weight [mg]')),
                ('potential_contamination', models.CharField(blank=True, max_length=250)),
                ('collection_protocol', models.CharField(blank=True, max_length=250, verbose_name='Collection protocol (inc. chemicals description)')),
                ('further_information_3', models.CharField(blank=True, max_length=250)),
                ('sub_sampling_date', models.DateField(blank=True, max_length=250, null=True)),
                ('sub_sample_collected_by', models.CharField(blank=True, max_length=250)),
                ('sub_sample_identified_by', models.CharField(blank=True, max_length=250)),
                ('nature_fraction_be_analyse', models.CharField(blank=True, max_length=250, verbose_name='Nature fraction to be analyse')),
                ('date_sub_sampling', models.DateField(blank=True, max_length=250, null=True, verbose_name='Date of sub-sampling')),
                ('sub_sample_collection_protocol', models.CharField(blank=True, max_length=250)),
                ('subsample_weight_mg', models.CharField(blank=True, max_length=250, verbose_name='Subsample_weight_[mg]')),
                ('contact_lsce_id', models.ForeignKey(blank=True, limit_choices_to={'lsce_contact': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contact_lsce', to='people.people')),
                ('paper', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='paper.paper')),
                ('project_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='research.research')),
                ('submitter_1_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='people.people')),
                ('submitter_2_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='submitter2', to='people.people')),
            ],
            options={
                'db_table': 'sample',
            },
        ),
    ]
